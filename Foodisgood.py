import streamlit as st
from github_contents import GithubContents
import pandas as pd
import random 

DATA_FILE = "Rezepte.csv"

def init_github():
    if 'github' not in st.session_state:
        st.session_state.github = GithubContents(
            st.secrets["github"]["owner"],
            st.secrets["github"]["repo"],
            st.secrets["github"]["token"])

# Funktion zum Laden der Rezeptdaten
def load_recipe_data():
    github = st.session_state.github
    return github.read_df(DATA_FILE)

# Funktion zum Speichern der Rezeptdaten
def save_recipe_data(recipe_data):
    github = st.session_state.github
    github.write_df(DATA_FILE, recipe_data, "Update recipe data")

# Funktion zum L√∂schen eines Rezepts
def delete_recipes(recipes_to_delete, recipe_data):
    if recipes_to_delete:
        recipe_data = recipe_data[~recipe_data["Gericht"].isin(recipes_to_delete)]
        save_recipe_data(recipe_data)
        st.success("Das Rezept wurde erfolgreich gel√∂scht!")

def main():
    init_github()

    # Load the recipe data
    recipe_data = load_recipe_data()

    # Check if user has entered a username
    if 'username' not in st.session_state:
        st.title("üç≥ Willkommen bei FoodisGood")
        username = st.text_input("Bitte gib deinen Benutzernamen ein:")
        if username:
            st.session_state.username = username
            st.success(f"Willkommen bei FoodisGood, {username}!")

    # Show main app content if username is entered
    if 'username' in st.session_state and st.session_state.username:
        st.title(f"Willkommen bei FoodisGood, {st.session_state.username}!")

        # Tabs f√ºr Rezeptverwaltung und Nahrungserg√§nzungsmittel
        tab_options = ["√úber die App", "Rezepte anzeigen", "Rezepte hinzuf√ºgen", "Rezepte l√∂schen"]
        selected_tab = st.sidebar.radio("Optionen:", tab_options)

        if selected_tab == "Rezepte anzeigen":
            # Rezeptsuche nach Fr√ºhst√ºcksrezepten
            search_term = st.text_input("Suche nach einem Fr√ºhst√ºcksrezept:")
            if search_term:
                filtered_recipes = recipe_data[recipe_data["Gericht"].str.contains(search_term, case=False)]
            else:
                filtered_recipes = recipe_data

            # Dropdown-Men√º f√ºr Rezeptauswahl
            selected_recipe = st.selectbox("W√§hle ein Fr√ºhst√ºcksrezept aus:", filtered_recipes["Gericht"])

            # Informationen zum ausgew√§hlten Rezept anzeigen
            st.subheader(f"Rezept f√ºr {selected_recipe}:")
            selected_recipe_info = filtered_recipes[filtered_recipes["Gericht"] == selected_recipe].iloc[0]
            
            # Anzeige der Rezeptdetails
            st.markdown(f"**Zutaten:** {selected_recipe_info['Zutaten']}")
            st.markdown(f"**Anleitung:** {selected_recipe_info['Anleitung']}")
            st.markdown(f"**Schwierigkeitsgrad:** {selected_recipe_info['Schwierigkeitsgrad']}")
            st.markdown(f"**Dauer:** {selected_recipe_info['Dauer']}")

            # Bild des ausgew√§hlten Rezepts anzeigen
            st.image(selected_recipe_info["Bild"], caption=selected_recipe_info["Gericht"], use_column_width=True)

            # Einkaufsliste direkt unter den Zutaten anzeigen
            st.subheader("Einkaufsliste:")
            ingredients_list = selected_recipe_info["Zutaten"].split(", ")
            for ingredient in ingredients_list:
                # Checkbox f√ºr jedes Zutat hinzuf√ºgen
                buy = st.checkbox(ingredient)

            # Fr√ºhst√ºcks√ºberraschung mit Emojis
            emoji_surprises = [
                "üçì Beeren sind voller Antioxidantien und passen perfekt zu M√ºsli und Joghurt!",
                "ü•ë Avocados sind reich an gesunden Fetten und machen jedes Fr√ºhst√ºck cremig und s√§ttigend!",
                "ü•ö Eier sind eine hervorragende Proteinquelle und k√∂nnen vielseitig in Fr√ºhst√ºcksgerichten verwendet werden!",
                "ü•õ Mandelmilch ist eine k√∂stliche pflanzliche Milchalternative f√ºr Smoothies und M√ºsli!",
                "üçå Bananen sind reich an Kalium und ein perfekter nat√ºrlicher S√º√üstoff f√ºr Smoothies und Oatmeal!",
                "ü•û Pancakes sind ein klassisches Fr√ºhst√ºcksgericht und lassen sich vielseitig kombinieren!",
                "ü•£ Chia-Pudding ist eine gesunde und s√§ttigende Option f√ºr einen guten Start in den Tag!",
                "üç£ Lachs ist reich an Omega-3-Fetts√§uren und passt perfekt zu einem herzhaften Fr√ºhst√ºck!",
                "üçá Acai-Bowls sind eine leckere M√∂glichkeit, viele Vitamine und Antioxidantien zu genie√üen!",
                "üçè √Ñpfel sind gesund, knackig und eine perfekte Erg√§nzung f√ºr jedes M√ºsli oder Joghurt!",
                "üç≥ R√ºhrei mit R√§ucherlachs ist ein klassisches, proteinreiches Fr√ºhst√ºck f√ºr Feinschmecker!",
                "ü•Ø Bagels sind eine k√∂stliche Basis f√ºr herzhafte Fr√ºhst√ºckssandwiches!",
                "ü•î R√∂sti ist eine knusprige Kartoffelbeilage und perfekt f√ºr ein herzhaftes Fr√ºhst√ºck!",
                "üå± Tofu-Scramble ist eine vegane Alternative zu R√ºhrei und reich an pflanzlichem Protein!"
            ]

            # Button f√ºr eine zuf√§llige Emoji-√úberraschung zum Thema Fr√ºhst√ºck
            if st.button("Klicke hier f√ºr eine Fr√ºhst√ºcks√ºberraschung!"):
                random_surprise = random.choice(emoji_surprises)
                st.write("Klicke erneut f√ºr eine andere √úberraschung ;)")
                st.write(random_surprise)

        elif selected_tab == "Rezepte hinzuf√ºgen":
            # Bereich zum Hinzuf√ºgen neuer Rezepte
            st.subheader("F√ºge dein eigenes Rezept hinzu:")
            st.write("F√ºlle bitte alle Felder aus, um ein neues Rezept hinzuzuf√ºgen, einschlie√ülich Bild-URL.")
            new_recipe_name = st.text_input("Name des Rezepts:")
            new_recipe_ingredients = st.text_area("Zutaten (getrennt durch Komma):")
            new_recipe_instructions = st.text_area("Anleitung:")
            new_recipe_difficulty = st.selectbox("Schwierigkeitsgrad:", ["Leicht", "Mittel", "Schwer"])
            new_recipe_duration = st.text_input("Dauer (z.B. 30 Minuten):")
            new_recipe_image_url = st.text_input("Bild-URL:")

            if st.button("Rezept hinzuf√ºgen"):
                if new_recipe_name and new_recipe_ingredients and new_recipe_instructions and new_recipe_difficulty and new_recipe_duration and new_recipe_image_url:
                    new_recipe_data = {
                        "Gericht": new_recipe_name,
                        "Zutaten": new_recipe_ingredients,
                        "Anleitung": new_recipe_instructions,
                        "Schwierigkeitsgrad": new_recipe_difficulty,
                        "Dauer": new_recipe_duration,
                        "Bild": new_recipe_image_url
                    }
                    # DataFrame f√ºr das neue Rezept erstellen
                    new_recipe_df = pd.DataFrame([new_recipe_data])
                    # Neues Rezept zur vorhandenen Rezeptdaten hinzuf√ºgen
                    recipe_data = pd.concat([recipe_data, new_recipe_df], ignore_index=True)
                    # Rezeptdaten speichern
                    save_recipe_data(recipe_data)
                    st.success("Das Rezept wurde erfolgreich hinzugef√ºgt!")

        elif selected_tab == "Rezepte l√∂schen":
            # Bereich zum L√∂schen von Rezepten
            st.subheader("W√§hle Rezepte zum L√∂schen aus:")
            recipes_to_delete = st.multiselect("Rezepte:", list(recipe_data["Gericht"]))
            
            if st.button("Rezepte l√∂schen"):
                delete_recipes(recipes_to_delete, recipe_data)

        elif selected_tab == "√úber die App":
            st.markdown("""
            ## √úber die FoodisGood App üåü

            Die FoodisGood App bietet eine Vielzahl von Fr√ºhst√ºcksrezepten, die dir helfen sollen, deinen Tag gesund und lecker zu beginnen. 
            Du kannst neue Rezepte hinzuf√ºgen, bestehende Rezepte anzeigen und sogar Rezepte l√∂schen, die du nicht mehr ben√∂tigst.

            Die App enth√§lt auch Informationen zu empfohlenen Nahrungserg√§nzungsmitteln, um deine Ern√§hrung zu erg√§nzen.

            Genie√üe deine Mahlzeiten und viel Spa√ü beim Entdecken neuer Fr√ºhst√ºcksideen!
            """)

        # Sidebar mit Nahrungserg√§nzungsmitteln
        st.sidebar.title("Nahrungserg√§nzungsmittel")
        st.sidebar.markdown("""
        - **Vitamin D:** Wichtig f√ºr die Knochengesundheit und das Immunsystem. Produktempfehlung: [Burgerstein Vitamin D3 600 IE](https://www.burgerstein.ch/de-DE/produkte/burgerstein-vitamin-d3-600-ie)
        - **Omega-3-Fetts√§uren:** Unterst√ºtzen die Herzgesundheit und f√∂rdern die Gehirnfunktion. Produktempfehlung: [Burgerstein Omega-3 Liquid](https://www.burgerstein.ch/de-DE/produkte/burgerstein-omega-3-liquid)
        - **Probiotika:** Gut f√ºr die Darmgesundheit und die Verdauung. Produktempfehlung: [Burgerstein Biotics G](https://www.burgerstein.ch/de-DE/produkte/burgerstein-biotics-g)
        - **Magnesium:** Kann helfen, Muskelkr√§mpfe zu reduzieren und hilft bei M√ºdigkeit. Produktempfehlung: [Burgerstein Magnesiumvital Direct](https://www.burgerstein.ch/de-DE/produkte/burgerstein-magnesiumvital-direct)
        """)

        # Footer
        st.markdown("---")
        st.markdown("Erstellt von FoodisGood üç≥ Genie√üe deine Mahlzeiten und dein Studium! üòä")

if __name__ == "__main__":
    main()
